name: CI

on: [push, pull_request]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt, clippy
      - name: fmt --check
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: -- --check
      - uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-targets

  doc:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-ruby@v1
      - name: Install asciidoctor
        run: gem install asciidoctor
      - name: Build manpage
        run: asciidoctor -b manpage -a reproducible git-gone.1.adoc
      - name: Build README
        run: MANWIDTH=80 man -l git-gone.1 > README
      - name: Check changes
        run: git --no-pager diff --exit-code -- git-gone.1 README

  test:
    strategy:
      matrix:
        target:
          # Linux default
          - x86_64-unknown-linux-gnu
          # For statically linked release builds
          - x86_64-unknown-linux-musl
          # macOS
          - x86_64-apple-darwin
          # Windows
          - x86_64-pc-windows-msvc
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          - target: x86_64-unknown-linux-musl
            os: ubuntu-latest
            flags: --no-default-features
          - target: x86_64-apple-darwin
            os: macOS-latest
          - target: x86_64-pc-windows-msvc
            os: windows-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
       # Install musl tools for musl target
      - name: Install musl tools
        run: sudo apt-get install musl-tools
        if: "contains(matrix.target, 'musl')"
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          target: ${{ matrix.target }}
      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: --all-targets --target ${{ matrix.target }}
      - uses: actions-rs/cargo@v1
        with:
          command: test
          args: --target ${{ matrix.target }}
